<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--<mapper namespace="com.ry.dao.UserMapper" > 这里是自动生成的 -->
<mapper namespace="com.ry.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.ry.pojo.User" >
    <id column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="useraccount" property="useraccount" jdbcType="VARCHAR" />
    <result column="usercontact" property="usercontact" jdbcType="VARCHAR" />
    <result column="usercreate" property="usercreate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, username, password, useraccount, usercontact, usercreate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List"  />
    from user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  
  <!-- 用于登录 -->
  <select id="selectByUserAccount" resultMap="BaseResultMap"  parameterType="java.lang.String" >
  	select
  	<include refid="Base_Column_List" />
  	from user
  	where useraccount = #{useraccount,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询所有的数据 -->
  <!-- 这里的返回类型是 UserMap -->
  <select id="selectAll"  resultMap="BaseResultMap" >
  	select 
  	<include refid="Base_Column_List"  /> 
  	from user
  </select>
  
  <select id="selectCount"  resultType="java.lang.Long"  >
  	select 
  		count(*)
  	from user
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ry.pojo.User" >
    insert into user (userid, username, password, 
      useraccount, usercontact, usercreate
      )
    values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{useraccount,jdbcType=VARCHAR}, #{usercontact,jdbcType=VARCHAR}, #{usercreate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ry.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="useraccount != null" >
        useraccount,
      </if>
      <if test="usercontact != null" >
        usercontact,
      </if>
      <if test="usercreate != null" >
        usercreate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="useraccount != null" >
        #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="usercontact != null" >
        #{usercontact,jdbcType=VARCHAR},
      </if>
      <if test="usercreate != null" >
        #{usercreate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ry.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="useraccount != null" >
        useraccount = #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="usercontact != null" >
        usercontact = #{usercontact,jdbcType=VARCHAR},
      </if>
      <if test="usercreate != null" >
        usercreate = #{usercreate,jdbcType=DATE},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ry.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      useraccount = #{useraccount,jdbcType=VARCHAR},
      usercontact = #{usercontact,jdbcType=VARCHAR},
      usercreate = #{usercreate,jdbcType=DATE}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>